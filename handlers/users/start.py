from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from loader import dp
from aiogram.types import Message, ReplyKeyboardRemove
from keyboards.default import menu, cancel
from aiogram.dispatcher.filters import Command
from loader import dp
from aiogram.dispatcher.filters.state import StatesGroup, State
from settings import ROOT_FOR_SAVE_IMAGES, URL_DJANGO
import requests

uslovia_description = """
–ú—ã —Ä–∞–¥—ã –¥–µ–ª–∞—Ç—å –í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ üõç–∏ –ø—Ä–æ—Å–∏–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏/
üëâ–ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –≤—ã–∫—É–ø–µ –ø–æ –ª—É—á—à–µ–π —Ü–µ–Ω–µ –∏ –¥–æ—Å—Ç–∞–≤–∫–µ –±–µ–∑ —Å—é—Ä–ø—Ä–∏–∑–æ–≤ –∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –∑–∞ —Ç–æ, –∫–∞–∫ –≤–µ–¥—É—Ç —Å–µ–±—è –≤–µ—â–∏ –≤ –Ω–æ—Å–∫–µ ‚Äì –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –∑–∞ —Å–∫—Ä–∏–ø –ø–æ–¥–æ—à–≤—ã –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–∞—Ç—ã—à–∫–æ–≤
üëâ–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π —Ä–∞–∑–º–µ—Ä –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —Ä–∞–∑–º–µ—Ä–Ω—É—é —Å–µ—Ç–∫—É, –Ω–æ —Ä–µ—à–µ–Ω–∏–µ –æ —Ç–æ–º, –∫–∞–∫–æ–π —Ä–∞–∑–º–µ—Ä –∑–∞–∫–∞–∑–∞—Ç—å, –í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!
üëâ–ü—Ä–æ –≤–æ–∑–≤—Ä–∞—Ç
–ú—ã —Å–µ—Ä–≤–∏—Å –ø–æ –≤—ã–∫—É–ø—É –∏ –¥–æ—Å—Ç–∞–≤–∫–µ —Ç–æ–≤–∞—Ä–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ –æ–±–º–µ–Ω–∞ –Ω–µ—Ç –∏ –Ω–µ –±—É–¥–µ—Ç.
–ï—Å–ª–∏ –≤–µ—â—å –Ω–µ –ø–æ–¥–æ—à–ª–∞ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—Ä–æ–∏—Ç—å –µ–µ –Ω–∞ –∞–≤–∏—Ç–æ/—é–ª–∞
"""

how_buy_description = """
–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç:
- —Ñ–æ—Ç–æ –≤–µ—â–∏
- –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä
"""

about_delivery_desctiption = """
–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å  —Å–∞–º—ã–º–∏ –Ω–∞–¥—ë–∂–Ω—ã–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –∏ –≤—ã–±–∏—Ä–∞–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–µ —Ç–∞—Ä–∏—Ñ—ã!
–°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –°–®–ê 5/7 –Ω–µ–¥–µ–ª—å —Å –º–æ–º–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–∞! 
–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ - 180/100–≥—Ä
–í–µ—Å —Ç–æ–≤–∞—Ä–∞, –∞ —Ç–∞–∫–∂–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Ñ–∞–∫—Ç—É –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥ –≤ –†–§.
–°—É—â–µ—Å—Ç–≤—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–ø—Ä—è–º—É—é —Å—Ä–∞–∑—É –¥–æ –≤–∞—Å, —É—Å–ª–æ–≤–∏—è –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
–í—Å—é –æ–±—É–≤—å –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–æ—Ä–æ–±–æ–∫, –µ—Å–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –Ω–µ –æ–≥–æ–≤–æ—Ä–µ–Ω–æ –∏–Ω–æ–µ.
–í —Å–≤—è–∑–∏ —Å —Å–∏—Ç—É–∞—Ü–∏–µ–π –≤ –º–∏—Ä–µ, –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∏ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç –¥–æ—Å—Ç–∞–≤–∫—É –≤ —Å—Ä–æ–∫, —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç—Å—è –∏ –º—ã –∑–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ –Ω–µ—Å—ë–º! 
–ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –∂–¥–∞—Ç—å –∏ –¥–æ 5 –º–µ—Å! –í–æ–∑–≤—Ä–∞—Ç–∞ –∑–∞ –¥–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–µ—Ç!
–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –≤–∞–º –¥–æ—Å—Ç–∞–≤–∫—É —Ç–æ–≤–∞—Ä–∞ –ª–∏–±–æ –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤, –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø—Ä–∏—à—ë–ª –≤ —Ç–µ—á–µ–Ω–∏–∏ 6 –º–µ—Å—è—Ü–µ–≤!

"""


@dp.message_handler(CommandStart())
async def show_menu(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —É–∑–Ω–∞–π—Ç–µ –æ –Ω–∞—Å –±–æ–ª—å—à–µ, –≤—ã–±—Ä–∞–≤ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ªüëá")
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é", reply_markup=menu)

@dp.message_handler(text='–£—Å–ª–æ–≤–∏—è')
async def uslovia(message: Message):
    await message.answer(uslovia_description)

@dp.message_handler(text='–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å')
async def how_buy(message: Message):
    await message.answer(how_buy_description)

@dp.message_handler(text='–í—Å–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ')
async def about_delivery(message: Message):
    await message.answer(about_delivery_desctiption)


@dp.message_handler(text="–æ—Ç–º–µ–Ω–∞", state="*")
async def back_from_reg(message: Message, state=FSMContext):
    await state.finish()
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=menu)


class MakeOrder(StatesGroup):
    input_size = State()


@dp.message_handler(content_types=['photo'])
async def get_photo(message: types.Message, state=FSMContext):
    try:
        file_name = f'{message.message_id}.png'
        await message.photo[-1].download(destination_file= ROOT_FOR_SAVE_IMAGES + file_name)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞')
        await MakeOrder.input_size.set()
        await state.update_data(order_image=file_name)
    except Exception as e:
        print(e)


@dp.message_handler(state=MakeOrder.input_size)
async def get_photo(message: types.Message, state=FSMContext):
    state_data = await state.get_data()
    order_image = state_data['order_image']

    data_req = {
        'size': message.text,
        'contact': message.from_user.url,
        'image': order_image,
    }

    req_add_order = requests.post(URL_DJANGO + 'create/order/', json=data_req)

    if req_add_order.status_code == 200:
        await message.answer('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä')
        await state.finish()
    else:
        await message.answer('–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ!')
        await state.finish()
